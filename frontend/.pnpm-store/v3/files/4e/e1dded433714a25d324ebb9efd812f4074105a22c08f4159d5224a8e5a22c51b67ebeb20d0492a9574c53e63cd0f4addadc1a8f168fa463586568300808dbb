/**
 * Returns the value based on current theme color mode.
 *
 * @param light
 * @param dark
 * @returns
 */
export const mode = (light, dark) => (properties) => (properties.colorMode == 'dark' ? dark : light);
export const getColor = (theme, color, fallback) => {
    return theme?.colors[color] || fallback;
};
/**
 * Makes colors transparent
 *
 * @param color color to transform
 * @param opacity opacity to apply from 0 to 1
 * @returns
 */
export const transparentize = (color, opacity) => (theme) => {
    return (theme?.colors[color]
        ?.replace(/^#/, '')
        .replace(/([\da-f]{2})/g, '$1 ')
        .trim() +
        ' ' +
        opacity);
};
/**
 * Runs a function or return value
 *
 * @param value - value to check
 * @param args - args to pass
 */
export const runIfFn = (value, ...args) => {
    if (typeof value === 'function') {
        return value(...args);
    }
    return value;
};
