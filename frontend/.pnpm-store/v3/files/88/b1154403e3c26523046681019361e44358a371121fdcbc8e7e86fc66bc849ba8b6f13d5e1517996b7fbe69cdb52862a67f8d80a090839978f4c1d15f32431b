export type Dict<T = unknown> = Record<string, T>;
/**
 * Omit keys from an object
 *
 * @param object
 * @param keys
 */
export declare function omit<T extends Dict>(object: T, keys: (keyof T)[]): T;
/**
 * Filter an object by a predicate function
 *
 * @param object
 * @param predicate
 */
export declare function filter<T extends Dict>(object: T, predicate: (value: T[keyof T], key: keyof T) => boolean): T;
/**
 * Pick a subset of keys from an object
 *
 * @param object
 * @param keys
 */
export declare function pick<T extends Dict>(object: T, keys: (keyof T)[]): T;
